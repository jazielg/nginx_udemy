### Performance

user www-data;

worker_processes auto;

events {
	# worker_connections 1024;
}

http {

	include mime.types;

	# Compress responses with gzip
	gzip on;
	gzip_comp_level 3;
	gzip_types text/css;
	gzip_types text/javascript;

	# Configure microcache (fastcgi)
	fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";
	add_header X-Cache $upstream_cache_status;

	server {
		# listen 80;
		listen 443 ssl http2;
		server_name 127.0.0.1;

		root /var/www/site-nginx;

		## PHP
		index index.php index.html;

		## SSL
		ssl_certificate /etc/nginx/ssl/self.crt;
		ssl_certificate_key /etc/nginx/ssl/self.key;

		## Server Push # https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/
		location = /index.html {
			http2_push /bootstrap.css;
			http2_push /nginx.png;
		}

		# Disable PHP cache on POST
		set $no_cache 0; # Cache by default
		# Check for cache bypass
		# if($request_method = POST) {
		# 	set $no_cache 1;
		# }

		location ~\.php$ {
			# Pass php requests to the php-fpm service (fastcgi)
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.4-fpm.sock;

			# Enable cache
			fastcgi_cache ZONE_1;
			fastcgi_cache_valid 200 60m;
			fastcgi_cache_bypass $no_cache;
			fastcgi_no_cache $no_cache;
		}

		## Headers & Expires
		location ~* \.(css|js|jpg|png)$ {
			access_log off;
			add_header Cache-Control public;
			add_header Pragma public;
			add_header Vary Accept-Encoding;
			expires 1M;
		}
	}
}
