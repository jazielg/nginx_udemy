user www-data;

worker_processes auto;

events {
	worker_connections 1024;
}

http {

	include mime.types;

	# Hidden nginx version on curl
	server_tokens off;

	# Define limit zone
	limit_req_zone $request_uri zone=MYZONE:10m rate=1r/s;

	# Compress responses with gzip
	gzip on;
	gzip_comp_level 3;
	gzip_types text/css;
	gzip_types text/javascript;

	# Configure microcache (fastcgi)
	fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";
	add_header X-Cache $upstream_cache_status;

	# Buffer size for POST submissions
    client_body_buffer_size 10k;
    client_max_body_size 8m;

    # Buffer size for Headers
    client_header_buffer_size 1k;

    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open for
    keepalive_timeout 15;

    # Max time for the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets 
    tcp_nopush on;

	# Redirect all traffic to HTTPS
	server {
		listen 80;
		server_name 127.0.0.1;
		return 301 https://$host$request_uri;
	}

	server {
		# listen 80;
		listen 443 ssl http2;
		server_name 127.0.0.1;

		root /var/www/site-nginx;

		# Prefix match
		# location /greet {
		# 	return 200 'Hello from NGINX "/greet" location';
		# }

		# Exact prefix match
		# location = /greet {
		# 	return 200 'Hello from NGINX "/greet" location - EXACT MATCH'
		# }

		# Global Variable
		# location /inspect {
		# 	return 200 "$host\n$uri\n$args";
		# }

		# Variable
		# set $name 'Test Name';

		# If statement - localhost?apiKey=1234
		# if ($arg_apiKey != 1234) {
		# 	return 401 "Incorrect API Key";
		# }

		# Rewrite
		# rewrite /about /about.html;

		# Redirect
		# location /logo {
		# 	return 307 /nginx.png;
		# }

		# Try files
		# try_files $uri /cat.png /greet @friendly_404;

		# Named Location
		# location @friendly_404 {
		# 	return 404 "Sorry, that file could not be found.";
		# }

		## LOGS
		# /var/log/nginx/access.log
		# /var/log/nginx/error.log
		# location /secure {
		# 	access_log /var/log/nginx/secure.access.log; # Make new access log to this path
		# 	access_log off; # disable access log
		# 	return 200 "Welcome to secure area.";
		# }

		## PHP
		index index.php index.html;

		## Block site on iframe from other address
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-XSS-Protection "1; mode=block";

		## SSL
		ssl_certificate /etc/nginx/ssl/self.crt;
		ssl_certificate_key /etc/nginx/ssl/self.key;

		### SECURITY
		# Disable SSL, enable TLS
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

		# Optimise cipher suits
		ssl_prefer_server_ciphers on;
		ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

		# Enable DH Params
		# ssl_dhparam /etc/nginx/ssl/dhparam.pem;

		# Enable HSTS
		add_header Strict-Transport-Security "max-age=31536000" always;

		# SSL sessions
		ssl_session_cache shared:SSL:40m;
		ssl_session_timeout 4h;
		ssl_session_tickets on;

		## Server Push # https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/
		location = /index.html {
			http2_push /bootstrap.css;
			http2_push /nginx.png;
		}

		location / {
			# limit_req zone=MYZONE burst=5 nodelay;
			auth_basic "Secure Area";
			auth_basic_user_file /etc/nginx/.htpasswd;
			try_files $uri $uri/ =404;
		}

		# Disable PHP cache on POST
		set $no_cache 0; # Cache by default
		# Check for cache bypass
		# if($request_method = POST) {
		# 	set $no_cache 1;
		# }

		location ~\.php$ {
			# Pass php requests to the php-fpm service (fastcgi)
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.4-fpm.sock;

			# Enable cache
			fastcgi_cache ZONE_1;
			fastcgi_cache_valid 200 60m;
			fastcgi_cache_bypass $no_cache;
			fastcgi_no_cache $no_cache;
		}

		### PERFORMANCE
		## Headers & Expires
		location ~* \.(css|js|jpg|png)$ {
			access_log off;
			add_header Cache-Control public;
			add_header Pragma public;
			add_header Vary Accept-Encoding;
			expires 1M;
		}
	}
}

